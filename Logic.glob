DIGEST c098635964787af0edaad44bb9a96481
FLogic
R45:51 Tactics <> <> lib
R939:941 Coq.Init.Logic <> :type_scope:x_'='_x not
R981:983 Coq.Init.Datatypes <> nat ind
R991:993 Coq.Init.Logic <> :type_scope:x_'='_x not
R987:989 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R986:986 Logic <> n var
R990:990 Logic <> m var
R995:997 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R994:994 Logic <> m var
R998:998 Logic <> n var
R1238:1240 Coq.Init.Datatypes <> nat ind
R1244:1246 Coq.Init.Logic <> :type_scope:x_'='_x not
R1243:1243 Logic <> n var
R1274:1276 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1606:1618 <> plus_2_2_is_4
R1629:1631 Coq.Init.Logic <> :type_scope:x_'='_x not
R1625:1627 Coq.Init.Peano <> :nat_scope:x_'+'_x not
def 1869:1877 <> plus_fact
R1896:1898 Coq.Init.Logic <> :type_scope:x_'='_x not
R1892:1894 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1908:1916 Logic <> plus_fact def
prf 2101:2117 <> plus_fact_is_true
R2123:2131 Logic <> plus_fact def
def 2448:2455 <> is_three
R2462:2464 Coq.Init.Datatypes <> nat ind
R2480:2482 Coq.Init.Logic <> :type_scope:x_'='_x not
R2479:2479 Logic <> n var
R2492:2499 Logic <> is_three def
def 2754:2762 <> injective
R2776:2779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2780:2780 Logic <> B var
R2775:2775 Logic <> A var
R2801:2801 Logic <> A var
R2813:2816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2818:2820 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2817 Logic <> x var
R2821:2821 Logic <> y var
R2807:2809 Coq.Init.Logic <> :type_scope:x_'='_x not
R2804:2804 Logic <> f var
R2806:2806 Logic <> x var
R2810:2810 Logic <> f var
R2812:2812 Logic <> y var
R2832:2840 Logic <> injective def
prf 2850:2857 <> succ_inj
R2861:2869 Logic <> injective def
R2871:2871 Coq.Init.Datatypes <> S constr
R3242:3243 Coq.Init.Logic <> eq ind
def 3835:3845 <> and_example
R3858:3861 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3854:3856 Coq.Init.Logic <> :type_scope:x_'='_x not
R3850:3852 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3867:3869 Coq.Init.Logic <> :type_scope:x_'='_x not
R3863:3865 Coq.Init.Peano <> :nat_scope:x_'*'_x not
prf 4201:4209 <> and_intro
R4233:4236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4238:4241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4243:4246 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4242:4242 Logic <> A var
R4247:4247 Logic <> B var
R4237:4237 Logic <> B var
R4232:4232 Logic <> A var
def 4812:4823 <> and_example'
R4836:4839 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4832:4834 Coq.Init.Logic <> :type_scope:x_'='_x not
R4828:4830 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4845:4847 Coq.Init.Logic <> :type_scope:x_'='_x not
R4841:4843 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4866:4874 Logic <> and_intro thm
R4866:4874 Logic <> and_intro thm
def 5003:5014 <> and_exercise
R5033:5035 Coq.Init.Datatypes <> nat ind
R5047:5050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5056:5059 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5052:5054 Coq.Init.Logic <> :type_scope:x_'='_x not
R5051:5051 Logic <> n var
R5061:5063 Coq.Init.Logic <> :type_scope:x_'='_x not
R5060:5060 Logic <> m var
R5043:5045 Coq.Init.Logic <> :type_scope:x_'='_x not
R5039:5041 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5038:5038 Logic <> n var
R5042:5042 Logic <> m var
prf 5673:5684 <> and_example2
R5703:5705 Coq.Init.Datatypes <> nat ind
R5722:5725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5731:5733 Coq.Init.Logic <> :type_scope:x_'='_x not
R5727:5729 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5726:5726 Logic <> n var
R5730:5730 Logic <> m var
R5713:5716 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5709:5711 Coq.Init.Logic <> :type_scope:x_'='_x not
R5708:5708 Logic <> n var
R5718:5720 Coq.Init.Logic <> :type_scope:x_'='_x not
R5717:5717 Logic <> m var
prf 5954:5966 <> and_example2'
R5985:5987 Coq.Init.Datatypes <> nat ind
R6004:6007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6013:6015 Coq.Init.Logic <> :type_scope:x_'='_x not
R6009:6011 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6008:6008 Logic <> n var
R6012:6012 Logic <> m var
R5995:5998 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5991:5993 Coq.Init.Logic <> :type_scope:x_'='_x not
R5990:5990 Logic <> n var
R6000:6002 Coq.Init.Logic <> :type_scope:x_'='_x not
R5999:5999 Logic <> m var
prf 6294:6307 <> and_example2''
R6326:6328 Coq.Init.Datatypes <> nat ind
R6336:6339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6345:6348 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6354:6356 Coq.Init.Logic <> :type_scope:x_'='_x not
R6350:6352 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6349:6349 Logic <> n var
R6353:6353 Logic <> m var
R6341:6343 Coq.Init.Logic <> :type_scope:x_'='_x not
R6340:6340 Logic <> m var
R6332:6334 Coq.Init.Logic <> :type_scope:x_'='_x not
R6331:6331 Logic <> n var
prf 6708:6719 <> and_example3
R6738:6740 Coq.Init.Datatypes <> nat ind
R6752:6755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6761:6763 Coq.Init.Logic <> :type_scope:x_'='_x not
R6757:6759 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6756:6756 Logic <> n var
R6760:6760 Logic <> m var
R6748:6750 Coq.Init.Logic <> :type_scope:x_'='_x not
R6744:6746 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6743:6743 Logic <> n var
R6747:6747 Logic <> m var
R6810:6813 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6806:6808 Coq.Init.Logic <> :type_scope:x_'='_x not
R6815:6817 Coq.Init.Logic <> :type_scope:x_'='_x not
R6810:6813 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6806:6808 Coq.Init.Logic <> :type_scope:x_'='_x not
R6815:6817 Coq.Init.Logic <> :type_scope:x_'='_x not
R6832:6843 Logic <> and_exercise ex
R6832:6843 Logic <> and_exercise ex
prf 7106:7110 <> proj1
R7141:7144 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7145:7145 Logic <> P var
R7136:7139 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7135:7135 Logic <> P var
R7140:7140 Logic <> Q var
prf 7250:7254 <> proj2
R7285:7288 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7289:7289 Logic <> Q var
R7280:7283 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7279:7279 Logic <> P var
R7284:7284 Logic <> Q var
prf 7586:7595 <> and_commut
R7626:7629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7631:7634 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7630:7630 Logic <> Q var
R7635:7635 Logic <> P var
R7621:7624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7620:7620 Logic <> P var
R7625:7625 Logic <> Q var
prf 8032:8040 <> and_assoc
R8080:8083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8084:8084 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8091:8095 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8086:8089 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8085:8085 Logic <> P var
R8090:8090 Logic <> Q var
R8096:8096 Logic <> R var
R8068:8072 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8079:8079 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8067:8067 Logic <> P var
R8074:8077 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8073:8073 Logic <> Q var
R8078:8078 Logic <> R var
R8404:8406 Coq.Init.Logic <> and ind
prf 8966:8975 <> or_example
R8994:8996 Coq.Init.Datatypes <> nat ind
R9013:9016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9022:9024 Coq.Init.Logic <> :type_scope:x_'='_x not
R9018:9020 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R9017:9017 Logic <> n var
R9021:9021 Logic <> m var
R9004:9007 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9000:9002 Coq.Init.Logic <> :type_scope:x_'='_x not
R8999:8999 Logic <> n var
R9009:9011 Coq.Init.Logic <> :type_scope:x_'='_x not
R9008:9008 Logic <> m var
R9239:9246 Coq.Init.Peano <> mult_n_O thm
R9239:9246 Coq.Init.Peano <> mult_n_O thm
R9239:9246 Coq.Init.Peano <> mult_n_O thm
prf 9995:10002 <> or_intro
R10026:10029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10031:10034 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10030:10030 Logic <> A var
R10035:10035 Logic <> B var
R10025:10025 Logic <> A var
prf 10196:10207 <> zero_or_succ
R10224:10226 Coq.Init.Datatypes <> nat ind
R10234:10237 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10230:10232 Coq.Init.Logic <> :type_scope:x_'='_x not
R10229:10229 Logic <> n var
R10239:10241 Coq.Init.Logic <> :type_scope:x_'='_x not
R10238:10238 Logic <> n var
R10242:10242 Coq.Init.Datatypes <> S constr
R10245:10248 Coq.Init.Peano <> pred syndef
R10250:10250 Logic <> n var
prf 10377:10385 <> mult_eq_0
R10412:10415 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10421:10424 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10417:10419 Coq.Init.Logic <> :type_scope:x_'='_x not
R10416:10416 Logic <> n var
R10426:10428 Coq.Init.Logic <> :type_scope:x_'='_x not
R10425:10425 Logic <> m var
R10408:10410 Coq.Init.Logic <> :type_scope:x_'='_x not
R10404:10406 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10403:10403 Logic <> n var
R10407:10407 Logic <> m var
prf 10611:10619 <> or_commut
R10650:10654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10656:10659 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10655:10655 Logic <> Q var
R10660:10660 Logic <> P var
R10645:10648 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10644:10644 Logic <> P var
R10649:10649 Logic <> Q var
mod 11704:11708 <> MyNot
def 11723:11725 MyNot not
R11740:11743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11744:11748 Coq.Init.Logic <> False ind
R11739:11739 Logic <> P var
R11771:11773 Logic MyNot not def
not 11761:11761 MyNot :type_scope:'~'_x
R11799:11801 Logic MyNot not def
R11833:11837 Logic MyNot <> mod
prf 12043:12060 <> ex_falso_quodlibet
R12088:12091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12092:12092 Logic <> P var
R12083:12087 Coq.Init.Logic <> False ind
prf 12502:12520 <> not_implies_our_not
R12546:12550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12574:12574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12569:12572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12573:12573 Logic <> Q var
R12568:12568 Logic <> P var
R12543:12544 Coq.Init.Logic <> :type_scope:'~'_x not
R12545:12545 Logic <> P var
R12601:12603 Coq.Init.Logic <> not def
prf 12760:12771 <> zero_not_one
R12775:12776 Coq.Init.Logic <> :type_scope:'~'_x not
R12782:12782 Coq.Init.Logic <> :type_scope:'~'_x not
R12778:12780 Coq.Init.Logic <> :type_scope:x_'='_x not
R12941:12944 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12974:12986 <> zero_not_one'
R12991:12994 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13400:13408 <> not_False
R13414:13415 Coq.Init.Logic <> :type_scope:'~'_x not
R13416:13420 Coq.Init.Logic <> False ind
R13439:13441 Coq.Init.Logic <> not def
prf 13480:13509 <> contradiction_implies_anything
R13534:13534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13542:13546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13547:13547 Logic <> Q var
R13536:13539 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13535:13535 Logic <> P var
R13540:13540 Coq.Init.Logic <> :type_scope:'~'_x not
R13541:13541 Logic <> P var
R13611:13613 Coq.Init.Logic <> not def
prf 13670:13679 <> double_neg
R13703:13706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13707:13707 Coq.Init.Logic <> :type_scope:'~'_x not
R13708:13708 Coq.Init.Logic <> :type_scope:'~'_x not
R13709:13709 Logic <> P var
R13702:13702 Logic <> P var
R13764:13766 Coq.Init.Logic <> not def
prf 14090:14103 <> contrapositive
R14128:14128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14135:14140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14149:14149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14143:14146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14147:14147 Coq.Init.Logic <> :type_scope:'~'_x not
R14148:14148 Logic <> P var
R14141:14141 Coq.Init.Logic <> :type_scope:'~'_x not
R14142:14142 Logic <> Q var
R14130:14133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14134:14134 Logic <> Q var
R14129:14129 Logic <> P var
R14186:14188 Coq.Init.Logic <> not def
R14204:14206 Coq.Init.Logic <> not def
prf 14347:14369 <> not_both_true_and_false
R14392:14394 Coq.Init.Logic <> :type_scope:'~'_x not
R14402:14402 Coq.Init.Logic <> :type_scope:'~'_x not
R14396:14399 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14395:14395 Logic <> P var
R14400:14400 Coq.Init.Logic <> :type_scope:'~'_x not
R14401:14401 Logic <> P var
R14431:14433 Coq.Init.Logic <> not def
prf 15167:15183 <> not_true_is_false
R15198:15201 Basics <> bool ind
R15215:15218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15220:15222 Coq.Init.Logic <> :type_scope:x_'='_x not
R15219:15219 Logic <> b var
R15223:15227 Basics <> false constr
R15207:15210 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15206:15206 Logic <> b var
R15211:15214 Basics <> true constr
R15282:15284 Coq.Init.Logic <> not def
R15302:15319 Logic <> ex_falso_quodlibet thm
R15302:15319 Logic <> ex_falso_quodlibet thm
prf 15530:15547 <> not_true_is_false'
R15562:15565 Basics <> bool ind
R15579:15582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15584:15586 Coq.Init.Logic <> :type_scope:x_'='_x not
R15583:15583 Logic <> b var
R15587:15591 Basics <> false constr
R15571:15574 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15570:15570 Logic <> b var
R15575:15578 Basics <> true constr
R15647:15649 Coq.Init.Logic <> not def
prf 16026:16037 <> True_is_true
R16041:16044 Coq.Init.Logic <> True ind
R16060:16060 Coq.Init.Logic <> I constr
R16060:16060 Coq.Init.Logic <> I constr
mod 16742:16746 <> MyIff
def 16761:16763 MyIff iff
R16781:16781 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16788:16793 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16800:16800 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16783:16786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16787:16787 Logic <> Q var
R16782:16782 Logic <> P var
R16795:16798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16799:16799 Logic <> P var
R16794:16794 Logic <> Q var
R16827:16829 Logic MyIff iff def
not 16813:16813 MyIff :type_scope:x_'<->'_x
R16931:16935 Logic MyIff <> mod
prf 16947:16953 <> iff_sym
R16978:16978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16986:16991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16999:16999 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16993:16997 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16992:16992 Logic <> Q var
R16998:16998 Logic <> P var
R16980:16984 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16979:16979 Logic <> P var
R16985:16985 Logic <> Q var
prf 17127:17144 <> not_true_iff_false
R17169:17173 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17161:17164 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17160:17160 Logic <> b var
R17165:17168 Basics <> true constr
R17175:17177 Coq.Init.Logic <> :type_scope:x_'='_x not
R17174:17174 Logic <> b var
R17178:17182 Basics <> false constr
R17254:17270 Logic <> not_true_is_false thm
R17254:17270 Logic <> not_true_is_false thm
prf 17537:17544 <> iff_refl
R17568:17572 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17567:17567 Logic <> P var
R17573:17573 Logic <> P var
R17602:17604 Coq.Init.Logic <> iff def
prf 17666:17674 <> iff_trans
R17701:17701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17709:17713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17714:17714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17722:17727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17735:17735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17729:17733 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17728:17728 Logic <> P var
R17734:17734 Logic <> R var
R17716:17720 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17715:17715 Logic <> Q var
R17721:17721 Logic <> R var
R17703:17707 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17702:17702 Logic <> P var
R17708:17708 Logic <> Q var
R17762:17764 Coq.Init.Logic <> iff def
R17791:17793 Coq.Init.Logic <> iff def
R17822:17824 Coq.Init.Logic <> iff def
prf 18025:18047 <> or_distributes_over_and
R18087:18091 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18075:18079 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18086:18086 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18074:18074 Logic <> P var
R18081:18084 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18080:18080 Logic <> Q var
R18085:18085 Logic <> R var
R18092:18092 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18099:18104 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18111:18111 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18094:18097 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18093:18093 Logic <> P var
R18098:18098 Logic <> Q var
R18106:18109 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18105:18105 Logic <> P var
R18110:18110 Logic <> R var
R18896:18913 Coq.Setoids.Setoid <> <> lib
prf 19065:19070 <> mult_0
R19095:19099 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19091:19093 Coq.Init.Logic <> :type_scope:x_'='_x not
R19087:19089 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19086:19086 Logic <> n var
R19090:19090 Logic <> m var
R19105:19108 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19101:19103 Coq.Init.Logic <> :type_scope:x_'='_x not
R19100:19100 Logic <> n var
R19110:19112 Coq.Init.Logic <> :type_scope:x_'='_x not
R19109:19109 Logic <> m var
R19142:19150 Logic <> mult_eq_0 thm
R19142:19150 Logic <> mult_eq_0 thm
R19163:19172 Logic <> or_example thm
R19163:19172 Logic <> or_example thm
prf 19187:19194 <> or_assoc
R19234:19238 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19222:19226 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19233:19233 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19221:19221 Logic <> P var
R19228:19231 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19227:19227 Logic <> Q var
R19232:19232 Logic <> R var
R19239:19239 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19246:19250 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19241:19244 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19240:19240 Logic <> P var
R19245:19245 Logic <> Q var
R19251:19251 Logic <> R var
prf 19699:19706 <> mult_0_3
R19739:19743 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19735:19737 Coq.Init.Logic <> :type_scope:x_'='_x not
R19731:19733 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19727:19729 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19726:19726 Logic <> n var
R19730:19730 Logic <> m var
R19734:19734 Logic <> p var
R19749:19752 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19745:19747 Coq.Init.Logic <> :type_scope:x_'='_x not
R19744:19744 Logic <> n var
R19758:19761 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19754:19756 Coq.Init.Logic <> :type_scope:x_'='_x not
R19753:19753 Logic <> m var
R19763:19765 Coq.Init.Logic <> :type_scope:x_'='_x not
R19762:19762 Logic <> p var
R19802:19807 Logic <> mult_0 thm
R19802:19807 Logic <> mult_0 thm
R19802:19807 Logic <> mult_0 thm
R19818:19823 Logic <> mult_0 thm
R19818:19823 Logic <> mult_0 thm
R19818:19823 Logic <> mult_0 thm
R19834:19841 Logic <> or_assoc thm
R19834:19841 Logic <> or_assoc thm
R19834:19841 Logic <> or_assoc thm
prf 20039:20055 <> apply_iff_example
R20074:20076 Coq.Init.Datatypes <> nat ind
R20088:20091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20097:20100 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20093:20095 Coq.Init.Logic <> :type_scope:x_'='_x not
R20092:20092 Logic <> n var
R20102:20104 Coq.Init.Logic <> :type_scope:x_'='_x not
R20101:20101 Logic <> m var
R20084:20086 Coq.Init.Logic <> :type_scope:x_'='_x not
R20080:20082 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R20079:20079 Logic <> n var
R20083:20083 Logic <> m var
R20137:20142 Logic <> mult_0 thm
R20137:20142 Logic <> mult_0 thm
prf 21033:21044 <> four_is_even
R21048:21054 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21062:21063 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21059:21061 Coq.Init.Datatypes <> nat ind
R21065:21067 Coq.Init.Logic <> :type_scope:x_'='_x not
R21069:21071 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21068:21068 Logic <> n var
R21072:21072 Logic <> n var
prf 21307:21322 <> exists_example_2
R21338:21338 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21358:21365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21385:21385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21366:21372 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21374:21375 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21377:21379 Coq.Init.Logic <> :type_scope:x_'='_x not
R21376:21376 Logic <> n var
R21381:21383 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21384:21384 Logic <> o var
R21339:21345 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21347:21348 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21350:21352 Coq.Init.Logic <> :type_scope:x_'='_x not
R21349:21349 Logic <> n var
R21354:21356 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21357:21357 Logic <> m var
R21425:21427 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21425:21427 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 21609:21623 <> dist_not_exists
R21649:21652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21648:21648 Logic <> X var
R21662:21662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21676:21680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21681:21683 Coq.Init.Logic <> :type_scope:'~'_x not
R21699:21699 Coq.Init.Logic <> :type_scope:'~'_x not
R21684:21690 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21692:21693 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21694:21695 Coq.Init.Logic <> :type_scope:'~'_x not
R21696:21696 Logic <> P var
R21698:21698 Logic <> x var
R21673:21673 Logic <> P var
R21675:21675 Logic <> x var
R21726:21728 Coq.Init.Logic <> not def
prf 21923:21936 <> dist_exists_or
R21964:21967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21963:21963 Logic <> X var
R21977:21977 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21998:22003 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21978:21984 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21986:21987 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21991:21994 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21988:21988 Logic <> P var
R21990:21990 Logic <> x var
R21995:21995 Logic <> Q var
R21997:21997 Logic <> x var
R22004:22004 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22018:22023 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22037:22037 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22005:22011 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22013:22014 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22015:22015 Logic <> P var
R22017:22017 Logic <> x var
R22024:22030 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22032:22033 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22034:22034 Logic <> Q var
R22036:22036 Logic <> x var
def 23138:23139 <> In
R23157:23157 Logic <> A var
R23165:23168 Poly <> list ind
R23170:23170 Logic <> A var
R23191:23191 Logic <> l var
R23202:23203 Poly <> ::'['_']' not
R23208:23212 Coq.Init.Logic <> False ind
R23220:23223 Poly <> ::x_'::'_x not
R23236:23239 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23232:23234 Coq.Init.Logic <> :type_scope:x_'='_x not
R23235:23235 Logic <> x var
R23240:23241 Logic <> In def
R23243:23243 Logic <> x var
def 23377:23388 <> In_example_1
R23392:23393 Logic <> In def
R23397:23397 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23399:23400 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23402:23403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23405:23405 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23464:23475 <> In_example_2
R23502:23507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23508:23514 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23517:23518 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23520:23522 Coq.Init.Logic <> :type_scope:x_'='_x not
R23519:23519 Logic <> n var
R23524:23526 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23527:23528 Logic <> n' var
R23491:23492 Logic <> In def
R23496:23496 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23498:23499 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23501:23501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23494:23494 Logic <> n var
prf 23966:23971 <> In_map
R24003:24006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24007:24007 Logic <> B var
R24002:24002 Logic <> A var
R24015:24018 Poly <> list ind
R24020:24020 Logic <> A var
R24028:24028 Logic <> A var
R24042:24049 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24050:24051 Logic <> In def
R24060:24062 Poly <> map def
R24066:24066 Logic <> l var
R24064:24064 Logic <> f var
R24054:24054 Logic <> f var
R24056:24056 Logic <> x var
R24036:24037 Logic <> In def
R24041:24041 Logic <> l var
R24039:24039 Logic <> x var
prf 24752:24758 <> In_true
R24787:24787 Logic <> A var
R24795:24798 Poly <> list ind
R24800:24800 Logic <> A var
R24812:24815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24816:24817 Logic <> In def
R24823:24824 Poly <> ::x_'::'_x not
R24822:24822 Logic <> y var
R24825:24825 Logic <> l var
R24819:24819 Logic <> x var
R24806:24807 Logic <> In def
R24811:24811 Logic <> l var
R24809:24809 Logic <> x var
prf 24979:24988 <> In_map_iff
R25020:25023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25024:25024 Logic <> B var
R25019:25019 Logic <> A var
R25032:25035 Poly <> list ind
R25037:25037 Logic <> A var
R25045:25045 Logic <> B var
R25067:25075 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25053:25054 Logic <> In def
R25059:25061 Poly <> map def
R25065:25065 Logic <> l var
R25063:25063 Logic <> f var
R25056:25056 Logic <> y var
R25076:25082 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25084:25085 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25093:25096 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25089:25091 Coq.Init.Logic <> :type_scope:x_'='_x not
R25086:25086 Logic <> f var
R25088:25088 Logic <> x var
R25092:25092 Logic <> y var
R25097:25098 Logic <> In def
R25102:25102 Logic <> l var
R25100:25100 Logic <> x var
R25491:25496 Logic <> In_map thm
R25491:25496 Logic <> In_map thm
prf 25604:25613 <> in_app_iff
R25634:25634 Logic <> A var
R25652:25656 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25640:25641 Logic <> In def
R25647:25648 Poly <> ::x_'++'_x not
R25646:25646 Logic <> l var
R25649:25650 Logic <> l' var
R25643:25643 Logic <> a var
R25663:25666 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25657:25658 Logic <> In def
R25662:25662 Logic <> l var
R25660:25660 Logic <> a var
R25667:25668 Logic <> In def
R25672:25673 Logic <> l' var
R25670:25670 Logic <> a var
def 26781:26783 <> All
R26795:26798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26794:26794 Logic <> T var
R26810:26813 Poly <> list ind
R26815:26815 Logic <> T var
R26836:26836 Logic <> l var
R26847:26848 Poly <> ::'['_']' not
R26853:26856 Coq.Init.Logic <> True ind
R26863:26864 Poly <> ::x_'::'_x not
R26874:26877 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26871:26871 Logic <> P var
R26878:26880 Logic <> All def
R26882:26882 Logic <> P var
prf 26901:26906 <> All_In
R26927:26930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26926:26926 Logic <> T var
R26942:26945 Poly <> list ind
R26947:26947 Logic <> T var
R26955:26955 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26979:26988 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26972:26975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26976:26976 Logic <> P var
R26978:26978 Logic <> x var
R26966:26967 Logic <> In def
R26971:26971 Logic <> l var
R26969:26969 Logic <> x var
R26989:26991 Logic <> All def
R26995:26995 Logic <> l var
R26993:26993 Logic <> P var
def 27776:27791 <> combine_odd_even
R27810:27813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27807:27809 Coq.Init.Datatypes <> nat ind
R27825:27828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27822:27824 Coq.Init.Datatypes <> nat ind
R27850:27853 Basics <> oddb def
R27855:27855 Logic <> n var
R27875:27879 Logic <> Peven var
R27881:27881 Logic <> n var
R27863:27866 Logic <> Podd var
R27868:27868 Logic <> n var
prf 27952:27973 <> combine_odd_even_intro
R28003:28006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28000:28002 Coq.Init.Datatypes <> nat ind
R28018:28020 Coq.Init.Datatypes <> nat ind
R28028:28028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28052:28060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28061:28061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28087:28095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28096:28111 Logic <> combine_odd_even def
R28124:28124 Logic <> n var
R28118:28122 Logic <> Peven var
R28113:28116 Logic <> Podd var
R28076:28079 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28080:28084 Logic <> Peven var
R28086:28086 Logic <> n var
R28068:28070 Coq.Init.Logic <> :type_scope:x_'='_x not
R28062:28065 Basics <> oddb def
R28067:28067 Logic <> n var
R28071:28075 Basics <> false constr
R28042:28045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28046:28049 Logic <> Podd var
R28051:28051 Logic <> n var
R28035:28037 Coq.Init.Logic <> :type_scope:x_'='_x not
R28029:28032 Basics <> oddb def
R28034:28034 Logic <> n var
R28038:28041 Basics <> true constr
R28151:28166 Logic <> combine_odd_even def
R28179:28182 Basics <> oddb def
R28179:28182 Basics <> oddb def
prf 28258:28282 <> combine_odd_even_elim_odd
R28312:28315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28309:28311 Coq.Init.Datatypes <> nat ind
R28327:28329 Coq.Init.Datatypes <> nat ind
R28366:28373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28387:28394 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28395:28398 Logic <> Podd var
R28400:28400 Logic <> n var
R28380:28382 Coq.Init.Logic <> :type_scope:x_'='_x not
R28374:28377 Basics <> oddb def
R28379:28379 Logic <> n var
R28383:28386 Basics <> true constr
R28337:28352 Logic <> combine_odd_even def
R28365:28365 Logic <> n var
R28359:28363 Logic <> Peven var
R28354:28357 Logic <> Podd var
R28427:28442 Logic <> combine_odd_even def
prf 28490:28515 <> combine_odd_even_elim_even
R28545:28548 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28542:28544 Coq.Init.Datatypes <> nat ind
R28560:28562 Coq.Init.Datatypes <> nat ind
R28599:28606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28621:28628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28629:28633 Logic <> Peven var
R28635:28635 Logic <> n var
R28613:28615 Coq.Init.Logic <> :type_scope:x_'='_x not
R28607:28610 Basics <> oddb def
R28612:28612 Logic <> n var
R28616:28620 Basics <> false constr
R28570:28585 Logic <> combine_odd_even def
R28598:28598 Logic <> n var
R28592:28596 Logic <> Peven var
R28587:28590 Logic <> Podd var
R28662:28677 Logic <> combine_odd_even def
R29449:29457 Induction <> plus_comm thm
prf 30768:30777 <> plus_comm3
R30808:30810 Coq.Init.Logic <> :type_scope:x_'='_x not
R30798:30801 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30807:30807 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30797:30797 Logic <> n var
R30803:30805 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30802:30802 Logic <> m var
R30806:30806 Logic <> p var
R30811:30811 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30817:30820 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30813:30815 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30812:30812 Logic <> p var
R30816:30816 Logic <> m var
R30821:30821 Logic <> n var
R31094:31102 Induction <> plus_comm thm
R31094:31102 Induction <> plus_comm thm
R31094:31102 Induction <> plus_comm thm
R31115:31123 Induction <> plus_comm thm
R31115:31123 Induction <> plus_comm thm
R31115:31123 Induction <> plus_comm thm
R31392:31400 Induction <> plus_comm thm
R31392:31400 Induction <> plus_comm thm
R31392:31400 Induction <> plus_comm thm
R31422:31424 Coq.Init.Logic <> :type_scope:x_'='_x not
R31418:31420 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31426:31428 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31422:31424 Coq.Init.Logic <> :type_scope:x_'='_x not
R31418:31420 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31426:31428 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31445:31453 Induction <> plus_comm thm
R31445:31453 Induction <> plus_comm thm
R31445:31453 Induction <> plus_comm thm
prf 31712:31727 <> plus_comm3_take2
R31758:31760 Coq.Init.Logic <> :type_scope:x_'='_x not
R31748:31751 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31757:31757 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31747:31747 Logic <> n var
R31753:31755 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31752:31752 Logic <> m var
R31756:31756 Logic <> p var
R31761:31761 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31767:31770 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31763:31765 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31762:31762 Logic <> p var
R31766:31766 Logic <> m var
R31771:31771 Logic <> n var
R31807:31815 Induction <> plus_comm thm
R31807:31815 Induction <> plus_comm thm
R31807:31815 Induction <> plus_comm thm
R31829:31837 Induction <> plus_comm thm
R31829:31837 Induction <> plus_comm thm
R31829:31837 Induction <> plus_comm thm
def 32316:32335 <> lemma_application_ex
R32353:32355 Coq.Init.Datatypes <> nat ind
R32364:32367 Poly <> list ind
R32369:32371 Coq.Init.Datatypes <> nat ind
R32409:32416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32418:32420 Coq.Init.Logic <> :type_scope:x_'='_x not
R32417:32417 Logic <> n var
R32379:32380 Logic <> In def
R32385:32387 Poly <> map def
R32406:32407 Logic <> ns var
R32400:32402 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R32399:32399 Logic <> m var
R32382:32382 Logic <> n var
R32460:32464 Logic <> proj1 thm
R32471:32480 Logic <> In_map_iff thm
R32460:32464 Logic <> proj1 thm
R32471:32480 Logic <> In_map_iff thm
R32532:32539 Induction <> mult_0_r thm
R32532:32539 Induction <> mult_0_r thm
R32532:32539 Induction <> mult_0_r thm
def 34392:34411 <> function_equality_ex
R34421:34423 Coq.Init.Logic <> :type_scope:x_'='_x not
R34415:34418 Coq.Init.Peano <> plus syndef
R34424:34427 Coq.Init.Peano <> plus syndef
R34430:34433 Coq.Init.Peano <> pred syndef
ax 35289:35313 <> functional_extensionality
R35380:35383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35384:35384 Logic <> Y var
R35379:35379 Logic <> X var
R35390:35390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35414:35418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35420:35422 Coq.Init.Logic <> :type_scope:x_'='_x not
R35419:35419 Logic <> f var
R35423:35423 Logic <> g var
R35401:35401 Logic <> X var
R35408:35410 Coq.Init.Logic <> :type_scope:x_'='_x not
R35405:35405 Logic <> f var
R35407:35407 Logic <> x var
R35411:35411 Logic <> g var
R35413:35413 Logic <> x var
prf 35709:35721 <> plus_comm_ext
R35729:35731 Coq.Init.Logic <> :type_scope:x_'='_x not
R35725:35728 Coq.Init.Peano <> plus syndef
R35744:35746 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35743:35743 Logic <> m var
R35747:35747 Logic <> n var
R35765:35789 Logic <> functional_extensionality prfax
R35765:35789 Logic <> functional_extensionality prfax
R35810:35834 Logic <> functional_extensionality prfax
R35810:35834 Logic <> functional_extensionality prfax
R35855:35863 Induction <> plus_comm thm
R35855:35863 Induction <> plus_comm thm
R36634:36646 Logic <> plus_comm_ext thm
def 37182:37191 <> rev_append
R37206:37209 Poly <> list ind
R37211:37211 Logic <> X var
R37216:37219 Poly <> list ind
R37221:37221 Logic <> X var
R37234:37235 Logic <> l1 var
R37246:37247 Poly <> ::'['_']' not
R37252:37253 Logic <> l2 var
R37260:37263 Poly <> ::x_'::'_x not
R37271:37280 Logic <> rev_append def
R37288:37291 Poly <> ::x_'::'_x not
R37292:37293 Logic <> l2 var
def 37315:37320 <> tr_rev
R37331:37334 Poly <> list ind
R37336:37336 Logic <> X var
R37341:37344 Poly <> list ind
R37346:37346 Logic <> X var
R37353:37362 Logic <> rev_append def
R37366:37367 Poly <> ::'['_']' not
R37364:37364 Logic <> l var
prf 37720:37729 <> tr_rev_ref
R37762:37765 Poly <> list ind
R37767:37767 Logic <> X var
R37787:37789 Coq.Init.Logic <> :type_scope:x_'='_x not
R37771:37780 Logic <> rev_append def
R37785:37786 Logic <> l2 var
R37782:37783 Logic <> l1 var
R37806:37809 Poly <> ::x_'++'_x not
R37790:37799 Logic <> rev_append def
R37804:37805 Poly <> ::'['_']' not
R37801:37802 Logic <> l1 var
R37810:37811 Logic <> l2 var
R37935:37943 Poly <> app_assoc thm
R37935:37943 Poly <> app_assoc thm
R37935:37943 Poly <> app_assoc thm
prf 37979:37992 <> tr_rev_correct
R38015:38017 Coq.Init.Logic <> :type_scope:x_'='_x not
R38007:38012 Logic <> tr_rev def
R38014:38014 Logic <> X var
R38019:38021 Poly <> rev def
R38023:38023 Logic <> X var
R38048:38072 Logic <> functional_extensionality prfax
R38048:38072 Logic <> functional_extensionality prfax
R38082:38087 Logic <> tr_rev def
R38161:38170 Logic <> tr_rev_ref thm
R38161:38170 Logic <> tr_rev_ref thm
prf 38903:38914 <> evenb_double
R38944:38946 Coq.Init.Logic <> :type_scope:x_'='_x not
R38928:38932 Basics <> evenb def
R38935:38940 Induction <> double def
R38942:38942 Logic <> k var
R38947:38950 Basics <> true constr
prf 39104:39120 <> evenb_double_conv
R39136:39142 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39144:39145 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39147:39149 Coq.Init.Logic <> :type_scope:x_'='_x not
R39146:39146 Logic <> n var
R39153:39157 Basics <> evenb def
R39159:39159 Logic <> n var
R39196:39196 Coq.Init.Datatypes <> S constr
R39199:39204 Induction <> double def
R39206:39206 Logic <> k var
R39166:39171 Induction <> double def
R39173:39173 Logic <> k var
R39284:39290 Induction <> evenb_S thm
R39304:39310 Induction <> evenb_S thm
R39304:39310 Induction <> evenb_S thm
R39304:39310 Induction <> evenb_S thm
R39323:39327 Basics <> evenb def
R39323:39327 Basics <> evenb def
R39448:39448 Coq.Init.Datatypes <> S constr
R39448:39448 Coq.Init.Datatypes <> S constr
prf 39577:39590 <> even_bool_prop
R39620:39624 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R39613:39615 Coq.Init.Logic <> :type_scope:x_'='_x not
R39606:39610 Basics <> evenb def
R39612:39612 Logic <> n var
R39616:39619 Basics <> true constr
R39625:39631 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39633:39634 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39636:39638 Coq.Init.Logic <> :type_scope:x_'='_x not
R39635:39635 Logic <> n var
R39639:39644 Induction <> double def
R39646:39646 Logic <> k var
R39699:39715 Logic <> evenb_double_conv thm
R39699:39715 Logic <> evenb_double_conv thm
R39818:39829 Logic <> evenb_double thm
R39818:39829 Logic <> evenb_double thm
prf 40034:40049 <> beq_nat_true_iff
R40068:40070 Coq.Init.Datatypes <> nat ind
R40095:40099 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R40088:40090 Coq.Init.Logic <> :type_scope:x_'='_x not
R40075:40081 Basics <> beq_nat def
R40086:40087 Logic <> n2 var
R40083:40084 Logic <> n1 var
R40091:40094 Basics <> true constr
R40102:40104 Coq.Init.Logic <> :type_scope:x_'='_x not
R40100:40101 Logic <> n1 var
R40105:40106 Logic <> n2 var
R40149:40160 Tactics <> beq_nat_true thm
R40149:40160 Tactics <> beq_nat_true thm
R40199:40210 Induction <> beq_nat_refl thm
R40199:40210 Induction <> beq_nat_refl thm
R40199:40210 Induction <> beq_nat_refl thm
def 41446:41458 <> is_even_prime
R41471:41473 Coq.Init.Logic <> :type_scope:x_'='_x not
R41470:41470 Logic <> n var
R41493:41497 Basics <> false constr
R41481:41484 Basics <> true constr
def 43028:43036 <> even_1000
R43040:43046 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43048:43049 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43054:43056 Coq.Init.Logic <> :type_scope:x_'='_x not
R43057:43062 Induction <> double def
R43064:43064 Logic <> k var
def 43299:43308 <> even_1000'
R43322:43324 Coq.Init.Logic <> :type_scope:x_'='_x not
R43312:43316 Basics <> evenb def
R43325:43328 Basics <> true constr
def 43541:43551 <> even_1000''
R43555:43561 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43563:43564 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43569:43571 Coq.Init.Logic <> :type_scope:x_'='_x not
R43572:43577 Induction <> double def
R43579:43579 Logic <> k var
R43595:43608 Logic <> even_bool_prop thm
R43595:43608 Logic <> even_bool_prop thm
prf 44324:44336 <> andb_true_iff
R44353:44356 Basics <> bool ind
R44376:44380 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44369:44371 Coq.Init.Logic <> :type_scope:x_'='_x not
R44363:44366 Basics <> ::x_'&&'_x not
R44361:44362 Logic <> b1 var
R44367:44368 Logic <> b2 var
R44372:44375 Basics <> true constr
R44390:44393 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44383:44385 Coq.Init.Logic <> :type_scope:x_'='_x not
R44381:44382 Logic <> b1 var
R44386:44389 Basics <> true constr
R44396:44398 Coq.Init.Logic <> :type_scope:x_'='_x not
R44394:44395 Logic <> b2 var
R44399:44402 Basics <> true constr
prf 44702:44713 <> orb_true_iff
R44748:44752 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44741:44743 Coq.Init.Logic <> :type_scope:x_'='_x not
R44735:44738 Basics <> ::x_'||'_x not
R44733:44734 Logic <> b1 var
R44739:44740 Logic <> b2 var
R44744:44747 Basics <> true constr
R44762:44765 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R44755:44757 Coq.Init.Logic <> :type_scope:x_'='_x not
R44753:44754 Logic <> b1 var
R44758:44761 Basics <> true constr
R44768:44770 Coq.Init.Logic <> :type_scope:x_'='_x not
R44766:44767 Logic <> b2 var
R44771:44774 Basics <> true constr
prf 45396:45412 <> beq_nat_false_iff
R45429:45431 Coq.Init.Datatypes <> nat ind
R45455:45459 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45447:45449 Coq.Init.Logic <> :type_scope:x_'='_x not
R45436:45442 Basics <> beq_nat def
R45446:45446 Logic <> y var
R45444:45444 Logic <> x var
R45450:45454 Basics <> false constr
R45461:45464 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R45460:45460 Logic <> x var
R45465:45465 Logic <> y var
R45505:45511 Basics <> beq_nat def
R45505:45511 Basics <> beq_nat def
R45603:45614 Induction <> beq_nat_refl thm
R45603:45614 Induction <> beq_nat_refl thm
R45603:45614 Induction <> beq_nat_refl thm
R45650:45656 Basics <> beq_nat def
R45650:45656 Basics <> beq_nat def
R45703:45714 Tactics <> beq_nat_true thm
R45703:45714 Tactics <> beq_nat_true thm
def 46161:46168 <> beq_list
R46182:46185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46187:46190 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46191:46194 Basics <> bool ind
R46186:46186 Logic <> A var
R46181:46181 Logic <> A var
R46224:46227 Poly <> list ind
R46229:46229 Logic <> A var
R46234:46237 Basics <> bool ind
R46250:46251 Logic <> l1 var
R46262:46264 Poly <> nil constr
R46275:46276 Logic <> l2 var
R46289:46291 Poly <> nil constr
R46296:46299 Basics <> true constr
R46312:46316 Basics <> false constr
R46332:46333 Poly <> ::x_'::'_x not
R46347:46348 Logic <> l2 var
R46363:46365 Poly <> nil constr
R46370:46374 Basics <> false constr
R46386:46387 Poly <> ::x_'::'_x not
R46396:46399 Basics <> andb def
R46414:46421 Logic <> beq_list def
R46423:46425 Logic <> beq var
R46402:46404 Logic <> beq var
prf 46461:46477 <> beq_list_true_iff
R46500:46503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46505:46508 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46509:46512 Basics <> bool ind
R46504:46504 Logic <> A var
R46499:46499 Logic <> A var
R46520:46520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46563:46571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46611:46615 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46604:46606 Coq.Init.Logic <> :type_scope:x_'='_x not
R46586:46593 Logic <> beq_list def
R46602:46603 Logic <> l2 var
R46599:46600 Logic <> l1 var
R46595:46597 Logic <> beq var
R46607:46610 Basics <> true constr
R46618:46620 Coq.Init.Logic <> :type_scope:x_'='_x not
R46616:46617 Logic <> l1 var
R46621:46622 Logic <> l2 var
R46551:46555 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46544:46546 Coq.Init.Logic <> :type_scope:x_'='_x not
R46535:46537 Logic <> beq var
R46542:46543 Logic <> a2 var
R46539:46540 Logic <> a1 var
R46547:46550 Basics <> true constr
R46558:46560 Coq.Init.Logic <> :type_scope:x_'='_x not
R46556:46557 Logic <> a1 var
R46561:46562 Logic <> a2 var
def 46875:46881 <> forallb
R46903:46906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46907:46910 Basics <> bool ind
R46902:46902 Logic <> X var
R46918:46921 Poly <> list ind
R46923:46923 Logic <> X var
R46928:46931 Basics <> bool ind
R46944:46944 Logic <> l var
R46955:46956 Poly <> ::'['_']' not
R46961:46964 Basics <> true constr
R46971:46974 Poly <> ::x_'::'_x not
R46981:46984 Basics <> andb def
R46996:47002 Logic <> forallb def
R47004:47007 Logic <> test var
R46987:46990 Logic <> test var
prf 47135:47150 <> forallb_true_iff
R47173:47176 Poly <> list ind
R47178:47178 Logic <> X var
R47206:47210 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47199:47201 Coq.Init.Logic <> :type_scope:x_'='_x not
R47185:47191 Logic <> forallb def
R47198:47198 Logic <> l var
R47193:47196 Logic <> test var
R47202:47205 Basics <> true constr
R47211:47213 Logic <> All def
R47240:47240 Logic <> l var
R47231:47233 Coq.Init.Logic <> :type_scope:x_'='_x not
R47225:47228 Logic <> test var
R47230:47230 Logic <> x var
R47234:47237 Basics <> true constr
def 47861:47875 <> excluded_middle
R47900:47903 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47899:47899 Logic <> P var
R47904:47905 Coq.Init.Logic <> :type_scope:'~'_x not
R47906:47906 Logic <> P var
prf 48716:48741 <> restricted_excluded_middle
R48759:48759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48774:48778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48780:48783 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R48779:48779 Logic <> P var
R48784:48785 Coq.Init.Logic <> :type_scope:'~'_x not
R48786:48786 Logic <> P var
R48761:48765 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48760:48760 Logic <> P var
R48767:48769 Coq.Init.Logic <> :type_scope:x_'='_x not
R48766:48766 Logic <> b var
R48770:48773 Basics <> true constr
prf 53086:53112 <> excluded_middle_irrefutable
R53135:53136 Coq.Init.Logic <> :type_scope:'~'_x not
R53137:53139 Coq.Init.Logic <> :type_scope:'~'_x not
R53148:53148 Coq.Init.Logic <> :type_scope:'~'_x not
R53141:53144 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53140:53140 Logic <> P var
R53145:53146 Coq.Init.Logic <> :type_scope:'~'_x not
R53147:53147 Logic <> P var
prf 53635:53649 <> not_exists_dist
R53670:53675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53698:53701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53697:53697 Logic <> X var
R53732:53736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53750:53750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53747:53747 Logic <> P var
R53749:53749 Logic <> x var
R53713:53715 Coq.Init.Logic <> :type_scope:'~'_x not
R53731:53731 Coq.Init.Logic <> :type_scope:'~'_x not
R53716:53722 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53724:53725 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53726:53727 Coq.Init.Logic <> :type_scope:'~'_x not
R53728:53728 Logic <> P var
R53730:53730 Logic <> x var
R53655:53669 Logic <> excluded_middle def
def 54375:54380 <> peirce
R54405:54405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54415:54417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54418:54418 Logic <> P var
R54406:54406 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54411:54413 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54414:54414 Logic <> P var
R54408:54409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54410:54410 Logic <> Q var
R54407:54407 Logic <> P var
def 54433:54459 <> double_negation_elimination
R54484:54487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54488:54488 Logic <> P var
R54481:54481 Coq.Init.Logic <> :type_scope:'~'_x not
R54482:54482 Coq.Init.Logic <> :type_scope:'~'_x not
R54483:54483 Logic <> P var
def 54503:54523 <> de_morgan_not_and_not
R54558:54561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54563:54564 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54562:54562 Logic <> P var
R54565:54565 Logic <> Q var
R54547:54548 Coq.Init.Logic <> :type_scope:'~'_x not
R54557:54557 Coq.Init.Logic <> :type_scope:'~'_x not
R54551:54554 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54549:54549 Coq.Init.Logic <> :type_scope:'~'_x not
R54550:54550 Logic <> P var
R54555:54555 Coq.Init.Logic <> :type_scope:'~'_x not
R54556:54556 Logic <> Q var
def 54582:54594 <> implies_to_or
R54618:54618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54623:54628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54634:54634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54631:54632 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54629:54629 Coq.Init.Logic <> :type_scope:'~'_x not
R54630:54630 Logic <> P var
R54633:54633 Logic <> Q var
R54620:54621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54622:54622 Logic <> Q var
R54619:54619 Logic <> P var
