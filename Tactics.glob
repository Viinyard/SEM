DIGEST e77203adf41d8b003f82000dadadbdd2
FTactics
R601:604 Poly <> <> lib
prf 878:883 <> silly1
R905:907 Coq.Init.Datatypes <> nat ind
R921:930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R944:952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R958:960 Coq.Init.Logic <> :type_scope:x_'='_x not
R953:953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R957:957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Tactics <> o var
R954:954 Tactics <> n var
R961:961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R963:963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R965:965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R964:964 Tactics <> p var
R962:962 Tactics <> m var
R936:938 Coq.Init.Logic <> :type_scope:x_'='_x not
R931:931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R933:933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R935:935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R934:934 Tactics <> o var
R932:932 Tactics <> n var
R939:939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R941:941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R943:943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R942:942 Tactics <> p var
R940:940 Tactics <> n var
R917:919 Coq.Init.Logic <> :type_scope:x_'='_x not
R916:916 Tactics <> n var
R920:920 Tactics <> m var
prf 1501:1506 <> silly2
R1528:1530 Coq.Init.Datatypes <> nat ind
R1544:1553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1554:1554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1597:1606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1612:1614 Coq.Init.Logic <> :type_scope:x_'='_x not
R1607:1607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1609:1609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Tactics <> o var
R1608:1608 Tactics <> n var
R1615:1615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1617:1617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Tactics <> p var
R1616:1616 Tactics <> m var
R1569:1571 Coq.Init.Datatypes <> nat ind
R1580:1583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1589:1591 Coq.Init.Logic <> :type_scope:x_'='_x not
R1584:1584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1586:1586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Tactics <> o var
R1585:1585 Tactics <> q var
R1592:1592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1594:1594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Tactics <> p var
R1593:1593 Tactics <> r var
R1576:1578 Coq.Init.Logic <> :type_scope:x_'='_x not
R1575:1575 Tactics <> q var
R1579:1579 Tactics <> r var
R1540:1542 Coq.Init.Logic <> :type_scope:x_'='_x not
R1539:1539 Tactics <> n var
R1543:1543 Tactics <> m var
prf 2286:2292 <> silly2a
R2310:2312 Coq.Init.Datatypes <> nat ind
R2334:2343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2344:2344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2391:2400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2404:2406 Coq.Init.Logic <> :type_scope:x_'='_x not
R2401:2401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2402:2402 Tactics <> n var
R2407:2407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2408:2408 Tactics <> m var
R2359:2361 Coq.Init.Datatypes <> nat ind
R2378:2381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2385:2387 Coq.Init.Logic <> :type_scope:x_'='_x not
R2382:2382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2383:2383 Tactics <> q var
R2388:2388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2389:2389 Tactics <> r var
R2370:2372 Coq.Init.Logic <> :type_scope:x_'='_x not
R2365:2365 Poly <> ::'('_x_','_x_')' not
R2367:2367 Poly <> ::'('_x_','_x_')' not
R2369:2369 Poly <> ::'('_x_','_x_')' not
R2366:2366 Tactics <> q var
R2368:2368 Tactics <> q var
R2373:2373 Poly <> ::'('_x_','_x_')' not
R2375:2375 Poly <> ::'('_x_','_x_')' not
R2377:2377 Poly <> ::'('_x_','_x_')' not
R2374:2374 Tactics <> r var
R2376:2376 Tactics <> r var
R2326:2328 Coq.Init.Logic <> :type_scope:x_'='_x not
R2321:2321 Poly <> ::'('_x_','_x_')' not
R2323:2323 Poly <> ::'('_x_','_x_')' not
R2325:2325 Poly <> ::'('_x_','_x_')' not
R2322:2322 Tactics <> n var
R2324:2324 Tactics <> n var
R2329:2329 Poly <> ::'('_x_','_x_')' not
R2331:2331 Poly <> ::'('_x_','_x_')' not
R2333:2333 Poly <> ::'('_x_','_x_')' not
R2330:2330 Tactics <> m var
R2332:2332 Tactics <> m var
prf 2592:2599 <> silly_ex
R2608:2608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2654:2663 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2678:2686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2693:2695 Coq.Init.Logic <> :type_scope:x_'='_x not
R2687:2690 Basics <> oddb def
R2696:2699 Basics <> true constr
R2671:2673 Coq.Init.Logic <> :type_scope:x_'='_x not
R2664:2668 Basics <> evenb def
R2674:2677 Basics <> true constr
R2633:2636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2647:2649 Coq.Init.Logic <> :type_scope:x_'='_x not
R2637:2640 Basics <> oddb def
R2643:2643 Coq.Init.Datatypes <> S constr
R2645:2645 Tactics <> n var
R2650:2653 Basics <> true constr
R2626:2628 Coq.Init.Logic <> :type_scope:x_'='_x not
R2619:2623 Basics <> evenb def
R2625:2625 Tactics <> n var
R2629:2632 Basics <> true constr
prf 2990:3004 <> silly3_firsttry
R3020:3022 Coq.Init.Datatypes <> nat ind
R3049:3058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3078:3080 Coq.Init.Logic <> :type_scope:x_'='_x not
R3059:3065 Basics <> beq_nat def
R3068:3068 Coq.Init.Datatypes <> S constr
R3071:3071 Coq.Init.Datatypes <> S constr
R3073:3073 Tactics <> n var
R3081:3084 Basics <> true constr
R3035:3037 Coq.Init.Logic <> :type_scope:x_'='_x not
R3031:3034 Basics <> true constr
R3038:3044 Basics <> beq_nat def
R3046:3046 Tactics <> n var
prf 3304:3309 <> silly3
R3325:3327 Coq.Init.Datatypes <> nat ind
R3354:3363 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3383:3385 Coq.Init.Logic <> :type_scope:x_'='_x not
R3364:3370 Basics <> beq_nat def
R3373:3373 Coq.Init.Datatypes <> S constr
R3376:3376 Coq.Init.Datatypes <> S constr
R3378:3378 Tactics <> n var
R3386:3389 Basics <> true constr
R3340:3342 Coq.Init.Logic <> :type_scope:x_'='_x not
R3336:3339 Basics <> true constr
R3343:3349 Basics <> beq_nat def
R3351:3351 Tactics <> n var
R3778:3780 Poly <> rev def
prf 3792:3804 <> rev_exercise1
R3823:3826 Poly <> list ind
R3828:3830 Coq.Init.Datatypes <> nat ind
R3849:3857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3860:3862 Coq.Init.Logic <> :type_scope:x_'='_x not
R3858:3859 Tactics <> l' var
R3863:3865 Poly <> rev def
R3867:3867 Tactics <> l var
R3840:3842 Coq.Init.Logic <> :type_scope:x_'='_x not
R3839:3839 Tactics <> l var
R3843:3845 Poly <> rev def
R3847:3848 Tactics <> l' var
R3934:3947 Poly <> rev_involutive thm
R3934:3947 Poly <> rev_involutive thm
def 4736:4751 <> trans_eq_example
R4777:4779 Coq.Init.Datatypes <> nat ind
R4801:4809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4823:4831 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4837:4839 Coq.Init.Logic <> :type_scope:x_'='_x not
R4832:4832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4834:4834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4836:4836 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4835:4835 Tactics <> b var
R4833:4833 Tactics <> a var
R4840:4840 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4842:4842 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4844:4844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4843:4843 Tactics <> f var
R4841:4841 Tactics <> e var
R4815:4817 Coq.Init.Logic <> :type_scope:x_'='_x not
R4810:4810 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4812:4812 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4814:4814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4813:4813 Tactics <> d var
R4811:4811 Tactics <> c var
R4818:4818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4820:4820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4822:4822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4821:4821 Tactics <> f var
R4819:4819 Tactics <> e var
R4793:4795 Coq.Init.Logic <> :type_scope:x_'='_x not
R4788:4788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4790:4790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4792:4792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4791:4791 Tactics <> b var
R4789:4789 Tactics <> a var
R4796:4796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4798:4798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4800:4800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4799:4799 Tactics <> d var
R4797:4797 Tactics <> c var
prf 5101:5108 <> trans_eq
R5137:5137 Tactics <> X var
R5148:5151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5157:5160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5162:5164 Coq.Init.Logic <> :type_scope:x_'='_x not
R5161:5161 Tactics <> n var
R5165:5165 Tactics <> o var
R5153:5155 Coq.Init.Logic <> :type_scope:x_'='_x not
R5152:5152 Tactics <> m var
R5156:5156 Tactics <> o var
R5144:5146 Coq.Init.Logic <> :type_scope:x_'='_x not
R5143:5143 Tactics <> n var
R5147:5147 Tactics <> m var
def 5420:5436 <> trans_eq_example'
R5462:5464 Coq.Init.Datatypes <> nat ind
R5486:5494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5508:5516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5522:5524 Coq.Init.Logic <> :type_scope:x_'='_x not
R5517:5517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5519:5519 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5521:5521 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5520:5520 Tactics <> b var
R5518:5518 Tactics <> a var
R5525:5525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5527:5527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5529:5529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5528:5528 Tactics <> f var
R5526:5526 Tactics <> e var
R5500:5502 Coq.Init.Logic <> :type_scope:x_'='_x not
R5495:5495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5497:5497 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5499:5499 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5498:5498 Tactics <> d var
R5496:5496 Tactics <> c var
R5503:5503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5505:5505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5507:5507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5506:5506 Tactics <> f var
R5504:5504 Tactics <> e var
R5478:5480 Coq.Init.Logic <> :type_scope:x_'='_x not
R5473:5473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5475:5475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5477:5477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5476:5476 Tactics <> b var
R5474:5474 Tactics <> a var
R5481:5481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5483:5483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5485:5485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5484:5484 Tactics <> d var
R5482:5482 Tactics <> c var
R6000:6000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6002:6002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6004:6004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5982:5989 Tactics <> trans_eq thm
R6000:6000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6002:6002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6004:6004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5982:5989 Tactics <> trans_eq thm
def 6334:6350 <> trans_eq_exercise
R6372:6374 Coq.Init.Datatypes <> nat ind
R6399:6407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6419:6427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6428:6428 Coq.Init.Logic <> :type_scope:x_'='_x not
R6434:6438 Coq.Init.Logic <> :type_scope:x_'='_x not
R6449:6449 Coq.Init.Logic <> :type_scope:x_'='_x not
R6430:6432 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6429:6429 Tactics <> n var
R6433:6433 Tactics <> p var
R6439:6446 Basics <> minustwo def
R6448:6448 Tactics <> o var
R6408:6408 Coq.Init.Logic <> :type_scope:x_'='_x not
R6414:6417 Coq.Init.Logic <> :type_scope:x_'='_x not
R6410:6412 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6409:6409 Tactics <> n var
R6413:6413 Tactics <> p var
R6418:6418 Tactics <> m var
R6384:6387 Coq.Init.Logic <> :type_scope:x_'='_x not
R6398:6398 Coq.Init.Logic <> :type_scope:x_'='_x not
R6383:6383 Tactics <> m var
R6388:6395 Basics <> minustwo def
R6397:6397 Tactics <> o var
R6494:6501 Basics <> minustwo def
R6479:6486 Tactics <> trans_eq thm
R6494:6501 Basics <> minustwo def
R6479:6486 Tactics <> trans_eq thm
prf 8051:8061 <> S_injective
R8079:8081 Coq.Init.Datatypes <> nat ind
R8096:8101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8103:8105 Coq.Init.Logic <> :type_scope:x_'='_x not
R8102:8102 Tactics <> n var
R8106:8106 Tactics <> m var
R8090:8092 Coq.Init.Logic <> :type_scope:x_'='_x not
R8087:8087 Coq.Init.Datatypes <> S constr
R8089:8089 Tactics <> n var
R8093:8093 Coq.Init.Datatypes <> S constr
R8095:8095 Tactics <> m var
prf 8593:8605 <> inversion_ex1
R8625:8627 Coq.Init.Datatypes <> nat ind
R8648:8653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8657:8659 Coq.Init.Logic <> :type_scope:x_'='_x not
R8654:8654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8656:8656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8655:8655 Tactics <> n var
R8660:8660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8662:8662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8661:8661 Tactics <> m var
R8639:8641 Coq.Init.Logic <> :type_scope:x_'='_x not
R8633:8633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8635:8636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8638:8638 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8637:8637 Tactics <> m var
R8634:8634 Tactics <> n var
R8642:8642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8644:8645 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8647:8647 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8646:8646 Tactics <> o var
R8643:8643 Tactics <> o var
prf 8831:8843 <> inversion_ex2
R8861:8863 Coq.Init.Datatypes <> nat ind
R8878:8883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8885:8887 Coq.Init.Logic <> :type_scope:x_'='_x not
R8884:8884 Tactics <> n var
R8888:8888 Tactics <> m var
R8872:8874 Coq.Init.Logic <> :type_scope:x_'='_x not
R8869:8869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8871:8871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8870:8870 Tactics <> n var
R8875:8875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8877:8877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8876:8876 Tactics <> m var
def 9010:9022 <> inversion_ex3
R9053:9053 Tactics <> X var
R9063:9066 Poly <> list ind
R9068:9068 Tactics <> X var
R9094:9099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9115:9120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9122:9124 Coq.Init.Logic <> :type_scope:x_'='_x not
R9121:9121 Tactics <> x var
R9125:9125 Tactics <> y var
R9106:9108 Coq.Init.Logic <> :type_scope:x_'='_x not
R9101:9104 Poly <> ::x_'::'_x not
R9100:9100 Tactics <> y var
R9105:9105 Tactics <> l var
R9110:9113 Poly <> ::x_'::'_x not
R9109:9109 Tactics <> x var
R9114:9114 Tactics <> j var
R9085:9087 Coq.Init.Logic <> :type_scope:x_'='_x not
R9075:9078 Poly <> ::x_'::'_x not
R9074:9074 Tactics <> x var
R9080:9083 Poly <> ::x_'::'_x not
R9079:9079 Tactics <> y var
R9084:9084 Tactics <> l var
R9089:9092 Poly <> ::x_'::'_x not
R9088:9088 Tactics <> z var
R9093:9093 Tactics <> j var
prf 9459:9465 <> f_equal
R9494:9497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9498:9498 Tactics <> B var
R9493:9493 Tactics <> A var
R9507:9507 Tactics <> A var
R9518:9521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9525:9527 Coq.Init.Logic <> :type_scope:x_'='_x not
R9522:9522 Tactics <> f var
R9524:9524 Tactics <> x var
R9528:9528 Tactics <> f var
R9530:9530 Tactics <> y var
R9514:9516 Coq.Init.Logic <> :type_scope:x_'='_x not
R9513:9513 Tactics <> x var
R9517:9517 Tactics <> y var
prf 9822:9832 <> beq_nat_0_l
R9867:9870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9872:9874 Coq.Init.Logic <> :type_scope:x_'='_x not
R9871:9871 Tactics <> n var
R9860:9862 Coq.Init.Logic <> :type_scope:x_'='_x not
R9849:9855 Basics <> beq_nat def
R9859:9859 Tactics <> n var
R9863:9866 Basics <> true constr
prf 10794:10806 <> inversion_ex4
R10822:10824 Coq.Init.Datatypes <> nat ind
R10837:10842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10848:10850 Coq.Init.Logic <> :type_scope:x_'='_x not
R10844:10846 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10833:10835 Coq.Init.Logic <> :type_scope:x_'='_x not
R10830:10830 Coq.Init.Datatypes <> S constr
R10832:10832 Tactics <> n var
R10836:10836 Coq.Init.Datatypes <> O constr
prf 10912:10924 <> inversion_ex5
R10942:10944 Coq.Init.Datatypes <> nat ind
R10962:10967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10971:10973 Coq.Init.Logic <> :type_scope:x_'='_x not
R10968:10968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10970:10970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10969:10969 Tactics <> n var
R10974:10974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10976:10976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10975:10975 Tactics <> m var
R10955:10957 Coq.Init.Logic <> :type_scope:x_'='_x not
R10950:10954 Basics <> false constr
R10958:10961 Basics <> true constr
def 11455:11467 <> inversion_ex6
R11524:11524 Tactics <> X var
R11534:11537 Poly <> list ind
R11539:11539 Tactics <> X var
R11561:11566 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11582:11587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11589:11591 Coq.Init.Logic <> :type_scope:x_'='_x not
R11588:11588 Tactics <> x var
R11592:11592 Tactics <> z var
R11573:11575 Coq.Init.Logic <> :type_scope:x_'='_x not
R11568:11571 Poly <> ::x_'::'_x not
R11567:11567 Tactics <> y var
R11572:11572 Tactics <> l var
R11577:11580 Poly <> ::x_'::'_x not
R11576:11576 Tactics <> z var
R11581:11581 Tactics <> j var
R11556:11558 Coq.Init.Logic <> :type_scope:x_'='_x not
R11546:11549 Poly <> ::x_'::'_x not
R11545:11545 Tactics <> x var
R11551:11554 Poly <> ::x_'::'_x not
R11550:11550 Tactics <> y var
R11555:11555 Tactics <> l var
R11559:11560 Poly <> ::'['_']' not
prf 12881:12885 <> S_inj
R12903:12905 Coq.Init.Datatypes <> nat ind
R12913:12916 Basics <> bool ind
R12948:12957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12969:12971 Coq.Init.Logic <> :type_scope:x_'='_x not
R12958:12964 Basics <> beq_nat def
R12968:12968 Tactics <> m var
R12966:12966 Tactics <> n var
R12972:12972 Tactics <> b var
R12944:12946 Coq.Init.Logic <> :type_scope:x_'='_x not
R12925:12931 Basics <> beq_nat def
R12940:12940 Coq.Init.Datatypes <> S constr
R12942:12942 Tactics <> m var
R12934:12934 Coq.Init.Datatypes <> S constr
R12936:12936 Tactics <> n var
R12947:12947 Tactics <> b var
prf 13810:13816 <> silly3'
R13832:13834 Coq.Init.Datatypes <> nat ind
R13840:13840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13889:13895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13914:13920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13925:13927 Coq.Init.Logic <> :type_scope:x_'='_x not
R13921:13924 Basics <> true constr
R13928:13934 Basics <> beq_nat def
R13937:13937 Coq.Init.Datatypes <> S constr
R13940:13940 Coq.Init.Datatypes <> S constr
R13942:13942 Tactics <> n var
R13900:13902 Coq.Init.Logic <> :type_scope:x_'='_x not
R13896:13899 Basics <> true constr
R13903:13909 Basics <> beq_nat def
R13911:13911 Tactics <> n var
R13859:13862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13882:13884 Coq.Init.Logic <> :type_scope:x_'='_x not
R13863:13869 Basics <> beq_nat def
R13872:13872 Coq.Init.Datatypes <> S constr
R13875:13875 Coq.Init.Datatypes <> S constr
R13877:13877 Tactics <> n var
R13885:13888 Basics <> true constr
R13852:13854 Coq.Init.Logic <> :type_scope:x_'='_x not
R13841:13847 Basics <> beq_nat def
R13849:13849 Tactics <> n var
R13855:13858 Basics <> true constr
R14822:14830 Induction <> plus_n_Sm thm
prf 14842:14859 <> plus_n_n_injective
R14893:14901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14903:14905 Coq.Init.Logic <> :type_scope:x_'='_x not
R14902:14902 Tactics <> n var
R14906:14906 Tactics <> m var
R14885:14887 Coq.Init.Logic <> :type_scope:x_'='_x not
R14881:14883 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14880:14880 Tactics <> n var
R14884:14884 Tactics <> n var
R14889:14891 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14888:14888 Tactics <> m var
R14892:14892 Tactics <> m var
R15104:15112 Induction <> plus_n_Sm thm
R15104:15112 Induction <> plus_n_Sm thm
R15104:15112 Induction <> plus_n_Sm thm
R15131:15139 Induction <> plus_n_Sm thm
R15131:15139 Induction <> plus_n_Sm thm
R15131:15139 Induction <> plus_n_Sm thm
prf 16124:16146 <> double_injective_FAILED
R16186:16194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16196:16198 Coq.Init.Logic <> :type_scope:x_'='_x not
R16195:16195 Tactics <> n var
R16199:16199 Tactics <> m var
R16175:16177 Coq.Init.Logic <> :type_scope:x_'='_x not
R16167:16172 Induction <> double def
R16174:16174 Tactics <> n var
R16178:16183 Induction <> double def
R16185:16185 Tactics <> m var
R16480:16486 Tactics <> f_equal thm
R16480:16486 Tactics <> f_equal thm
prf 18732:18747 <> double_injective
R18787:18795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18797:18799 Coq.Init.Logic <> :type_scope:x_'='_x not
R18796:18796 Tactics <> n var
R18800:18800 Tactics <> m var
R18776:18778 Coq.Init.Logic <> :type_scope:x_'='_x not
R18768:18773 Induction <> double def
R18775:18775 Tactics <> n var
R18779:18784 Induction <> double def
R18786:18786 Tactics <> m var
R19673:19679 Tactics <> f_equal thm
R19673:19679 Tactics <> f_equal thm
prf 20574:20585 <> beq_nat_true
R20623:20626 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20628:20630 Coq.Init.Logic <> :type_scope:x_'='_x not
R20627:20627 Tactics <> n var
R20631:20631 Tactics <> m var
R20616:20618 Coq.Init.Logic <> :type_scope:x_'='_x not
R20605:20611 Basics <> beq_nat def
R20615:20615 Tactics <> m var
R20613:20613 Tactics <> n var
R20619:20622 Basics <> true constr
R20783:20789 Tactics <> f_equal thm
R20783:20789 Tactics <> f_equal thm
prf 21373:21401 <> double_injective_take2_FAILED
R21441:21449 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21451:21453 Coq.Init.Logic <> :type_scope:x_'='_x not
R21450:21450 Tactics <> n var
R21454:21454 Tactics <> m var
R21430:21432 Coq.Init.Logic <> :type_scope:x_'='_x not
R21422:21427 Induction <> double def
R21429:21429 Tactics <> n var
R21433:21438 Induction <> double def
R21440:21440 Tactics <> m var
R21735:21741 Tactics <> f_equal thm
R21735:21741 Tactics <> f_equal thm
prf 22677:22698 <> double_injective_take2
R22738:22746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22748:22750 Coq.Init.Logic <> :type_scope:x_'='_x not
R22747:22747 Tactics <> n var
R22751:22751 Tactics <> m var
R22727:22729 Coq.Init.Logic <> :type_scope:x_'='_x not
R22719:22724 Induction <> double def
R22726:22726 Tactics <> n var
R22730:22735 Induction <> double def
R22737:22737 Tactics <> m var
R23214:23220 Tactics <> f_equal thm
R23214:23220 Tactics <> f_equal thm
prf 25424:25434 <> beq_id_true
R25469:25472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25474:25476 Coq.Init.Logic <> :type_scope:x_'='_x not
R25473:25473 Tactics <> x var
R25477:25477 Tactics <> y var
R25462:25464 Coq.Init.Logic <> :type_scope:x_'='_x not
R25452:25457 Lists <> beq_id def
R25461:25461 Tactics <> y var
R25459:25459 Tactics <> x var
R25465:25468 Basics <> true constr
R25538:25540 Coq.Init.Logic <> :type_scope:x_'='_x not
R25538:25540 Coq.Init.Logic <> :type_scope:x_'='_x not
R25553:25564 Tactics <> beq_nat_true thm
R25553:25564 Tactics <> beq_nat_true thm
prf 25722:25741 <> nth_error_after_last
R25756:25758 Coq.Init.Datatypes <> nat ind
R25777:25780 Poly <> list ind
R25782:25782 Tactics <> X var
R25803:25811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25825:25827 Coq.Init.Logic <> :type_scope:x_'='_x not
R25812:25820 Poly <> nth_error def
R25824:25824 Tactics <> n var
R25822:25822 Tactics <> l var
R25828:25831 Poly <> None constr
R25799:25801 Coq.Init.Logic <> :type_scope:x_'='_x not
R25791:25796 Poly <> length def
R25798:25798 Tactics <> l var
R25802:25802 Tactics <> n var
prf 26198:26212 <> app_length_cons
R26243:26246 Poly <> list ind
R26248:26248 Tactics <> X var
R26290:26290 Tactics <> X var
R26298:26300 Coq.Init.Datatypes <> nat ind
R26337:26345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26367:26369 Coq.Init.Logic <> :type_scope:x_'='_x not
R26346:26346 Coq.Init.Datatypes <> S constr
R26349:26354 Poly <> length def
R26359:26362 Poly <> ::x_'++'_x not
R26357:26358 Tactics <> l1 var
R26363:26364 Tactics <> l2 var
R26370:26370 Tactics <> n var
R26333:26335 Coq.Init.Logic <> :type_scope:x_'='_x not
R26309:26314 Poly <> length def
R26319:26323 Poly <> ::x_'++'_x not
R26331:26331 Poly <> ::x_'++'_x not
R26317:26318 Tactics <> l1 var
R26325:26328 Poly <> ::x_'::'_x not
R26324:26324 Tactics <> x var
R26329:26330 Tactics <> l2 var
R26336:26336 Tactics <> n var
R26586:26592 Tactics <> f_equal thm
R26586:26592 Tactics <> f_equal thm
prf 26781:26805 <> app_length_cons_invective
R26836:26839 Poly <> list ind
R26841:26841 Tactics <> X var
R26883:26883 Tactics <> X var
R26891:26893 Coq.Init.Datatypes <> nat ind
R26927:26930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26955:26957 Coq.Init.Logic <> :type_scope:x_'='_x not
R26931:26936 Poly <> length def
R26941:26945 Poly <> ::x_'++'_x not
R26953:26953 Poly <> ::x_'++'_x not
R26939:26940 Tactics <> l1 var
R26947:26950 Poly <> ::x_'::'_x not
R26946:26946 Tactics <> x var
R26951:26952 Tactics <> l2 var
R26958:26958 Tactics <> n var
R26923:26925 Coq.Init.Logic <> :type_scope:x_'='_x not
R26902:26902 Coq.Init.Datatypes <> S constr
R26905:26910 Poly <> length def
R26915:26918 Poly <> ::x_'++'_x not
R26913:26914 Tactics <> l1 var
R26919:26920 Tactics <> l2 var
R26926:26926 Tactics <> n var
R27174:27180 Tactics <> f_equal thm
R27174:27180 Tactics <> f_equal thm
R27216:27222 Tactics <> f_equal thm
prf 27233:27248 <> app_length_twice
R27271:27273 Coq.Init.Datatypes <> nat ind
R27279:27282 Poly <> list ind
R27284:27284 Tactics <> X var
R27305:27313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27329:27331 Coq.Init.Logic <> :type_scope:x_'='_x not
R27314:27319 Poly <> length def
R27323:27326 Poly <> ::x_'++'_x not
R27322:27322 Tactics <> l var
R27327:27327 Tactics <> l var
R27333:27335 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27332:27332 Tactics <> n var
R27336:27336 Tactics <> n var
R27301:27303 Coq.Init.Logic <> :type_scope:x_'='_x not
R27293:27298 Poly <> length def
R27300:27300 Tactics <> l var
R27304:27304 Tactics <> n var
R27603:27603 Coq.Init.Datatypes <> S constr
R27585:27591 Tactics <> f_equal thm
R27603:27603 Coq.Init.Datatypes <> S constr
R27585:27591 Tactics <> f_equal thm
R27619:27643 Tactics <> app_length_cons_invective thm
R27619:27643 Tactics <> app_length_cons_invective thm
R27704:27712 Induction <> plus_n_Sm thm
R27704:27712 Induction <> plus_n_Sm thm
R27704:27712 Induction <> plus_n_Sm thm
prf 27882:27897 <> double_induction
R27915:27918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27922:27925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27919:27921 Coq.Init.Datatypes <> nat ind
R27912:27914 Coq.Init.Datatypes <> nat ind
R27940:27945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27946:27946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27975:27981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27982:27982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28011:28017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28018:28018 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28053:28059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28072:28072 Tactics <> P var
R28076:28076 Tactics <> n var
R28074:28074 Tactics <> m var
R28036:28039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28040:28040 Tactics <> P var
R28049:28049 Coq.Init.Datatypes <> S constr
R28051:28051 Tactics <> n var
R28043:28043 Coq.Init.Datatypes <> S constr
R28045:28045 Tactics <> m var
R28031:28031 Tactics <> P var
R28035:28035 Tactics <> n var
R28033:28033 Tactics <> m var
R27998:28001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28002:28002 Tactics <> P var
R28007:28007 Coq.Init.Datatypes <> S constr
R28009:28009 Tactics <> n var
R27993:27993 Tactics <> P var
R27997:27997 Tactics <> n var
R27962:27965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27966:27966 Tactics <> P var
R27969:27969 Coq.Init.Datatypes <> S constr
R27971:27971 Tactics <> m var
R27957:27957 Tactics <> P var
R27959:27959 Tactics <> m var
R27935:27935 Tactics <> P var
def 28549:28554 <> square
R28562:28564 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28561:28561 Tactics <> n var
R28565:28565 Tactics <> n var
prf 28636:28646 <> square_mult
R28676:28678 Coq.Init.Logic <> :type_scope:x_'='_x not
R28662:28667 Tactics <> square def
R28671:28673 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28670:28670 Tactics <> n var
R28674:28674 Tactics <> m var
R28687:28689 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28679:28684 Tactics <> square def
R28686:28686 Tactics <> n var
R28690:28695 Tactics <> square def
R28697:28697 Tactics <> m var
R29014:29019 Tactics <> square def
R29346:29355 Induction <> mult_assoc thm
R29346:29355 Induction <> mult_assoc thm
R29346:29355 Induction <> mult_assoc thm
R29381:29383 Coq.Init.Logic <> :type_scope:x_'='_x not
R29377:29379 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29373:29375 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29389:29391 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29385:29387 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29381:29383 Coq.Init.Logic <> :type_scope:x_'='_x not
R29377:29379 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29373:29375 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29389:29391 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29385:29387 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29408:29416 Induction <> mult_comm thm
R29408:29416 Induction <> mult_comm thm
R29408:29416 Induction <> mult_comm thm
R29425:29434 Induction <> mult_assoc thm
R29425:29434 Induction <> mult_assoc thm
R29460:29469 Induction <> mult_assoc thm
R29460:29469 Induction <> mult_assoc thm
R29460:29469 Induction <> mult_assoc thm
def 29853:29855 <> foo
R29861:29863 Coq.Init.Datatypes <> nat ind
prf 30076:30087 <> silly_fact_1
R30110:30112 Coq.Init.Logic <> :type_scope:x_'='_x not
R30106:30108 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30101:30103 Tactics <> foo def
R30105:30105 Tactics <> m var
R30124:30126 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30113:30115 Tactics <> foo def
R30119:30121 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30118:30118 Tactics <> m var
def 30357:30359 <> bar
R30374:30374 Tactics <> x var
R30385:30385 Coq.Init.Datatypes <> O constr
R30396:30396 Coq.Init.Datatypes <> S constr
prf 30470:30488 <> silly_fact_2_FAILED
R30511:30513 Coq.Init.Logic <> :type_scope:x_'='_x not
R30507:30509 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30502:30504 Tactics <> bar def
R30506:30506 Tactics <> m var
R30525:30527 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30514:30516 Tactics <> bar def
R30520:30522 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30519:30519 Tactics <> m var
prf 31516:31527 <> silly_fact_2
R31550:31552 Coq.Init.Logic <> :type_scope:x_'='_x not
R31546:31548 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31541:31543 Tactics <> bar def
R31545:31545 Tactics <> m var
R31564:31566 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31553:31555 Tactics <> bar def
R31559:31561 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31558:31558 Tactics <> m var
prf 31917:31929 <> silly_fact_2'
R31952:31954 Coq.Init.Logic <> :type_scope:x_'='_x not
R31948:31950 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31943:31945 Tactics <> bar def
R31947:31947 Tactics <> m var
R31966:31968 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31955:31957 Tactics <> bar def
R31961:31963 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31960:31960 Tactics <> m var
R32000:32002 Tactics <> bar def
def 32646:32653 <> sillyfun
R32660:32662 Coq.Init.Datatypes <> nat ind
R32667:32670 Basics <> bool ind
R32680:32686 Basics <> beq_nat def
R32688:32688 Tactics <> n var
R32713:32719 Basics <> beq_nat def
R32721:32721 Tactics <> n var
R32743:32747 Basics <> false constr
R32730:32734 Basics <> false constr
R32697:32701 Basics <> false constr
prf 32759:32772 <> sillyfun_false
R32788:32790 Coq.Init.Datatypes <> nat ind
R32806:32808 Coq.Init.Logic <> :type_scope:x_'='_x not
R32796:32803 Tactics <> sillyfun def
R32805:32805 Tactics <> n var
R32809:32813 Basics <> false constr
R32842:32849 Tactics <> sillyfun def
R32864:32870 Basics <> beq_nat def
R32864:32870 Basics <> beq_nat def
R32964:32970 Basics <> beq_nat def
R32964:32970 Basics <> beq_nat def
def 33712:33716 <> split
R33736:33739 Poly <> list ind
R33743:33743 Poly <> :type_scope:x_'*'_x not
R33742:33742 Tactics <> X var
R33744:33744 Tactics <> Y var
R33765:33765 Poly <> :type_scope:x_'*'_x not
R33772:33776 Poly <> :type_scope:x_'*'_x not
R33783:33783 Poly <> :type_scope:x_'*'_x not
R33766:33769 Poly <> list ind
R33771:33771 Tactics <> X var
R33777:33780 Poly <> list ind
R33782:33782 Tactics <> Y var
R33797:33797 Tactics <> l var
R33808:33809 Poly <> ::'['_']' not
R33814:33814 Poly <> ::'('_x_','_x_')' not
R33817:33818 Poly <> ::'('_x_','_x_')' not
R33821:33821 Poly <> ::'('_x_','_x_')' not
R33815:33816 Poly <> ::'['_']' not
R33819:33820 Poly <> ::'['_']' not
R33833:33836 Poly <> ::x_'::'_x not
R33827:33827 Poly <> ::'('_x_','_x_')' not
R33829:33830 Poly <> ::'('_x_','_x_')' not
R33832:33832 Poly <> ::'('_x_','_x_')' not
R33854:33858 Tactics <> split def
R33875:33875 Poly <> ::'('_x_','_x_')' not
R33878:33879 Poly <> ::'('_x_','_x_')' not
R33882:33882 Poly <> ::'('_x_','_x_')' not
R33887:33887 Poly <> ::'('_x_','_x_')' not
R33895:33896 Poly <> ::'('_x_','_x_')' not
R33904:33904 Poly <> ::'('_x_','_x_')' not
R33889:33892 Poly <> ::x_'::'_x not
R33898:33901 Poly <> ::x_'::'_x not
prf 33988:34000 <> combine_split
R34020:34023 Poly <> list ind
R34027:34029 Poly <> :type_scope:x_'*'_x not
R34026:34026 Tactics <> X var
R34030:34030 Tactics <> Y var
R34061:34066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34080:34082 Coq.Init.Logic <> :type_scope:x_'='_x not
R34067:34073 Poly <> combine def
R34078:34079 Tactics <> l2 var
R34075:34076 Tactics <> l1 var
R34083:34083 Tactics <> l var
R34050:34052 Coq.Init.Logic <> :type_scope:x_'='_x not
R34043:34047 Tactics <> split def
R34049:34049 Tactics <> l var
R34053:34053 Poly <> ::'('_x_','_x_')' not
R34056:34057 Poly <> ::'('_x_','_x_')' not
R34060:34060 Poly <> ::'('_x_','_x_')' not
R34054:34055 Tactics <> l1 var
R34058:34059 Tactics <> l2 var
def 34560:34568 <> sillyfun1
R34575:34577 Coq.Init.Datatypes <> nat ind
R34582:34585 Basics <> bool ind
R34595:34601 Basics <> beq_nat def
R34603:34603 Tactics <> n var
R34627:34633 Basics <> beq_nat def
R34635:34635 Tactics <> n var
R34656:34660 Basics <> false constr
R34644:34647 Basics <> true constr
R34612:34615 Basics <> true constr
prf 34919:34938 <> sillyfun1_odd_FAILED
R34954:34956 Coq.Init.Datatypes <> nat ind
R34983:34991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34998:35000 Coq.Init.Logic <> :type_scope:x_'='_x not
R34992:34995 Basics <> oddb def
R34997:34997 Tactics <> n var
R35001:35004 Basics <> true constr
R34976:34978 Coq.Init.Logic <> :type_scope:x_'='_x not
R34965:34973 Tactics <> sillyfun1 def
R34975:34975 Tactics <> n var
R34979:34982 Basics <> true constr
R35036:35044 Tactics <> sillyfun1 def
R35065:35071 Basics <> beq_nat def
R35065:35071 Basics <> beq_nat def
prf 35921:35933 <> sillyfun1_odd
R35949:35951 Coq.Init.Datatypes <> nat ind
R35978:35986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35993:35995 Coq.Init.Logic <> :type_scope:x_'='_x not
R35987:35990 Basics <> oddb def
R35992:35992 Tactics <> n var
R35996:35999 Basics <> true constr
R35971:35973 Coq.Init.Logic <> :type_scope:x_'='_x not
R35960:35968 Tactics <> sillyfun1 def
R35970:35970 Tactics <> n var
R35974:35977 Basics <> true constr
R36031:36039 Tactics <> sillyfun1 def
R36060:36066 Basics <> beq_nat def
R36060:36066 Basics <> beq_nat def
R36315:36326 Tactics <> beq_nat_true thm
R36315:36326 Tactics <> beq_nat_true thm
R36613:36619 Basics <> beq_nat def
R36613:36619 Basics <> beq_nat def
R36679:36690 Tactics <> beq_nat_true thm
R36679:36690 Tactics <> beq_nat_true thm
prf 36854:36875 <> bool_fn_applied_thrice
R36897:36900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36901:36904 Basics <> bool ind
R36893:36896 Basics <> bool ind
R36912:36915 Basics <> bool ind
R36932:36934 Coq.Init.Logic <> :type_scope:x_'='_x not
R36921:36921 Tactics <> f var
R36924:36924 Tactics <> f var
R36927:36927 Tactics <> f var
R36929:36929 Tactics <> b var
R36935:36935 Tactics <> f var
R36937:36937 Tactics <> b var
R36984:36987 Basics <> true constr
R36984:36987 Basics <> true constr
R37019:37022 Basics <> true constr
R37019:37022 Basics <> true constr
R37077:37081 Basics <> false constr
R37077:37081 Basics <> false constr
R37140:37144 Basics <> false constr
R37140:37144 Basics <> false constr
R37202:37206 Basics <> false constr
R37202:37206 Basics <> false constr
R37236:37239 Basics <> true constr
R37236:37239 Basics <> true constr
R37304:37308 Basics <> false constr
R37304:37308 Basics <> false constr
R37339:37342 Basics <> true constr
R37339:37342 Basics <> true constr
prf 39648:39658 <> beq_nat_sym
R39676:39678 Coq.Init.Datatypes <> nat ind
R39695:39697 Coq.Init.Logic <> :type_scope:x_'='_x not
R39684:39690 Basics <> beq_nat def
R39694:39694 Tactics <> m var
R39692:39692 Tactics <> n var
R39698:39704 Basics <> beq_nat def
R39708:39708 Tactics <> n var
R39706:39706 Tactics <> m var
prf 40222:40234 <> beq_nat_trans
R40272:40277 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40296:40301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40313:40315 Coq.Init.Logic <> :type_scope:x_'='_x not
R40302:40308 Basics <> beq_nat def
R40312:40312 Tactics <> p var
R40310:40310 Tactics <> n var
R40316:40319 Basics <> true constr
R40289:40291 Coq.Init.Logic <> :type_scope:x_'='_x not
R40278:40284 Basics <> beq_nat def
R40288:40288 Tactics <> p var
R40286:40286 Tactics <> m var
R40292:40295 Basics <> true constr
R40265:40267 Coq.Init.Logic <> :type_scope:x_'='_x not
R40254:40260 Basics <> beq_nat def
R40264:40264 Tactics <> m var
R40262:40262 Tactics <> n var
R40268:40271 Basics <> true constr
R40345:40356 Tactics <> beq_nat_true thm
R40345:40356 Tactics <> beq_nat_true thm
R40370:40381 Tactics <> beq_nat_true thm
R40370:40381 Tactics <> beq_nat_true thm
R40435:40446 Induction <> beq_nat_refl thm
R40435:40446 Induction <> beq_nat_refl thm
def 41160:41182 <> split_combine_statement
R41211:41214 Poly <> list ind
R41216:41216 Tactics <> X var
R41225:41228 Poly <> list ind
R41230:41230 Tactics <> Y var
R41257:41260 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41282:41284 Coq.Init.Logic <> :type_scope:x_'='_x not
R41261:41265 Tactics <> split def
R41268:41274 Poly <> combine def
R41279:41280 Tactics <> l2 var
R41276:41277 Tactics <> l1 var
R41285:41285 Poly <> ::'('_x_','_x_')' not
R41288:41289 Poly <> ::'('_x_','_x_')' not
R41292:41292 Poly <> ::'('_x_','_x_')' not
R41286:41287 Tactics <> l1 var
R41290:41291 Tactics <> l2 var
R41245:41247 Coq.Init.Logic <> :type_scope:x_'='_x not
R41236:41241 Poly <> length def
R41243:41244 Tactics <> l1 var
R41248:41253 Poly <> length def
R41255:41256 Tactics <> l2 var
prf 41304:41316 <> split_combine
R41320:41342 Tactics <> split_combine_statement def
R41359:41381 Tactics <> split_combine_statement def
prf 41601:41615 <> filter_exercise
R41646:41649 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41650:41653 Basics <> bool ind
R41645:41645 Tactics <> X var
R41690:41690 Tactics <> X var
R41701:41704 Poly <> list ind
R41706:41706 Tactics <> X var
R41738:41746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41753:41755 Coq.Init.Logic <> :type_scope:x_'='_x not
R41747:41750 Tactics <> test var
R41752:41752 Tactics <> x var
R41756:41759 Basics <> true constr
R41728:41730 Coq.Init.Logic <> :type_scope:x_'='_x not
R41715:41720 Poly <> filter def
R41727:41727 Tactics <> l var
R41722:41725 Tactics <> test var
R41732:41735 Poly <> ::x_'::'_x not
R41731:41731 Tactics <> x var
R41736:41737 Tactics <> lf var
